-- upgrade --
CREATE TABLE IF NOT EXISTS "call" (
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "id" VARCHAR(50) NOT NULL  PRIMARY KEY,
    "from_pin" VARCHAR(6) NOT NULL  DEFAULT '',
    "from_number" VARCHAR(20) NOT NULL  DEFAULT '',
    "request_number" VARCHAR(20) NOT NULL  DEFAULT '',
    "request_pin" VARCHAR(6) NOT NULL  DEFAULT '',
    "voice_started_at" TIMESTAMP,
    "finished_at" TIMESTAMP,
    "call_type" VARCHAR(8) NOT NULL  DEFAULT 'UNKNOWN' /* INCOMING: INCOMING\nOUTBOUND: OUTBOUND\nINTERNAL: INTERNAL\nUNKNOWN: UNKNOWN */,
    "state" VARCHAR(13) NOT NULL  DEFAULT 'NEW' /* NEW: NEW\nEND: END\nCONNECTED: CONNECTED\nNOT_CONNECTED: NOT_CONNECTED\nMISSED: MISSED */,
    "integration_state" VARCHAR(13)   /* NEW: NEW\nEND: END\nCONNECTED: CONNECTED\nNOT_CONNECTED: NOT_CONNECTED\nMISSED: MISSED\nNOT_FOUNDED: NOT_FOUNDED\nCONVERTED: CONVERTED\nUPLOADED: UPLOADED\nSYNCED: SYNCED */,
    "account_id" VARCHAR(50),
    "external_id" VARCHAR(70),
    "comment" VARCHAR(512) NOT NULL  DEFAULT '',
    "record_path" VARCHAR(255),
    "record_id" VARCHAR(50) REFERENCES "call" ("id") ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS "idx_call_externa_a3f059" ON "call" ("external_id");
CREATE TABLE IF NOT EXISTS "channel" (
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "id" VARCHAR(50) NOT NULL  PRIMARY KEY,
    "name" VARCHAR(255) NOT NULL,
    "monitor_file_name" VARCHAR(255),
    "pin" VARCHAR(6) NOT NULL  DEFAULT '',
    "from_number" VARCHAR(20) NOT NULL  DEFAULT '',
    "request_number" VARCHAR(20) NOT NULL  DEFAULT '',
    "call_id" VARCHAR(50) REFERENCES "call" ("id") ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS "idx_channel_name_24c7bb" ON "channel" ("name");
CREATE TABLE IF NOT EXISTS "callrecord" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "converted" VARCHAR(255),
    "file_name" VARCHAR(255) NOT NULL,
    "duration" INT,
    "channel_id" VARCHAR(50) NOT NULL REFERENCES "channel" ("id") ON DELETE CASCADE,
    "call_id" VARCHAR(50) REFERENCES "call" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "tag" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "name" VARCHAR(30) NOT NULL,
    "color" VARCHAR(20),
    "description" VARCHAR(200)
);
CREATE TABLE IF NOT EXISTS "user" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "is_active" INT NOT NULL  DEFAULT 1,
    "username" VARCHAR(30) NOT NULL UNIQUE,
    "first_name" VARCHAR(30) NOT NULL  DEFAULT '',
    "last_name" VARCHAR(30) NOT NULL  DEFAULT '',
    "pass_hash" VARCHAR(255) NOT NULL  DEFAULT '',
    "permissions" TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS "token" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "refresh_token" VARCHAR(512) NOT NULL,
    "expired_at" TIMESTAMP NOT NULL,
    "user_id" INT REFERENCES "user" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "version" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "version" SMALLINT NOT NULL
);
CREATE TABLE IF NOT EXISTS "aerich" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "version" VARCHAR(255) NOT NULL,
    "app" VARCHAR(20) NOT NULL,
    "content" TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS "call_tags" (
    "call_id" VARCHAR(50) NOT NULL REFERENCES "call" ("id") ON DELETE CASCADE,
    "tag_id" INT NOT NULL REFERENCES "tag" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "channel_channel" (
    "channel_rel_id" VARCHAR(50) NOT NULL REFERENCES "channel" ("id") ON DELETE CASCADE,
    "channel_id" VARCHAR(50) NOT NULL REFERENCES "channel" ("id") ON DELETE CASCADE
);
